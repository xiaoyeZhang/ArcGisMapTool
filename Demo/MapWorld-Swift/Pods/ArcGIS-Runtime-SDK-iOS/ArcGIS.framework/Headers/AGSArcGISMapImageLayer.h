/*
 COPYRIGHT 2015 ESRI
 
 TRADE SECRETS: ESRI PROPRIETARY AND CONFIDENTIAL
 Unpublished material - all rights reserved under the
 Copyright Laws of the United States and applicable international
 laws, treaties, and conventions.
 
 For additional information, contact:
 Environmental Systems Research Institute, Inc.
 Attn: Contracts and Legal Services Department
 380 New York Street
 Redlands, California, 92373
 USA
 
 email: contracts@esri.com
 */

#import "AGSImageAdjustmentLayer.h"
#import "AGSRemoteResource.h"
#import "AGSTimeAware.h"

@class AGSArcGISMapServiceInfo;
@class AGSArcGISMapImageSublayer;
@class AGSItem;
@class AGSServiceFeatureTable;

/** @file AGSArcGISMapImageLayer.h */ //Required for Globals API doc

/** @brief A layer based on a dynamic ArcGIS Map service.
 
 Instances of this class allow you to display maps from a dynamic ArcGIS Map service. For example, http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer
 A dynamic map service generates map images on the fly.
 
 @since 100
 */
@interface AGSArcGISMapImageLayer : AGSImageAdjustmentLayer <AGSRemoteResource, AGSTimeAware>

NS_ASSUME_NONNULL_BEGIN

#pragma mark -
#pragma mark initializers

-(instancetype)init NS_UNAVAILABLE;

/** Initialize a map image layer with a URL of a dynamic ArcGIS Server Map service
 @param URL URL to a dynamic ArcGIS Map service.
 @return A new map image layer object.
 @since 100
 */
-(instancetype)initWithURL:(NSURL*)URL;

/** Initialize a map image layer with an item representing a dynamic ArcGIS map service. The item's type should be @c AGSPortalItemTypeMapService.
 @param  item representing a dynamic ArcGIS map service
 @return A new map image layer object.
 @since 100
 */
-(instancetype)initWithItem:(AGSItem*)item;

/** Initialize a map image layer with an item representing a dynamic ArcGIS map service. The item's type should be @c AGSPortalItemTypeMapService.
 @param  item representing a dynamic ArcGIS map service
 @return A new map image layer object.
 @since 100
 */
+(instancetype)ArcGISMapImageLayerWithItem:(AGSItem*)item;

/** Initialize a map image layer with a URL of a dynamic ArcGIS Server map service
 @param URL URL to a dynamic ArcGIS Map service.
 @return A new map image layer object.
 @since 100
 */
+(instancetype)ArcGISMapImageLayerWithURL:(NSURL*)URL;

#pragma mark -
#pragma mark properties


/** The geodatabase version
 @since 100
 */
@property (nonatomic, copy, readwrite) NSString *geodatabaseVersion;

/** Information about this layer's map service.
 @since 100
 */
@property (nullable, nonatomic, strong, readonly) AGSArcGISMapServiceInfo *mapServiceInfo;

/** The format of map images generated by this layer
 @since 100
 */
@property (nonatomic, assign, readwrite) AGSMapServiceImageFormat imageFormat;

/** This layer's sub-layers. Same as the subLayerContents property, except that it's strongly typed and mutable.
 @note This array does not allow duplicate objects.
 @since 100
 */
@property (nonatomic, strong, readonly) NSMutableArray<AGSArcGISMapImageSublayer*> *mapImageSublayers;

/** Time interval (in seconds) specifying how often the layer should auto-refresh its contents. If 0 or less is specified, the layer will not auto-refresh.
 @since 100.1
 */
@property (nonatomic, assign, readwrite) NSTimeInterval refreshInterval;

/** A convenience property to access all the backing tables for sublayers representing non-spatial tables in `#mapImageSublayers`
 @since 100.3
 */
@property (nonatomic, copy, readonly) NSArray<AGSServiceFeatureTable*> *tables;

#pragma mark -
#pragma mark methods

/** Resets the sublayers of a map image layer to the default values defined by the service.
After this call, all the changes previously made to sublayers either by using an `AGSArcGISMapImageSublayer` setter or by changing the sublayer collections are lost. The sublayer hierarchy comes back to its initial state defined by the service and the image requests issued for displaying the layer will no longer use the dynamic layer capabilities of the service.
 @since 100.1
 */
-(void)resetSublayers;

/** Loads all the objects in `#tables` and `#mapImageSublayers` collections
 @since 100.3
 */
-(id<AGSCancelable>)loadTablesAndLayersWithCompletion:(void(^)(NSError *error))completion;

NS_ASSUME_NONNULL_END

@end
